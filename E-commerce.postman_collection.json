{
	"info": {
		"_postman_id": "f7977965-ad0a-4de4-8e5e-25403af7bb66",
		"name": "E-commerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23215330"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "user registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"//tests[\"verify email\"] = responseBody.has(testing.email)\r",
									"//tests[\"verify password\"] = reponsebODY.has(testing[\"email\"])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"{{email}}\",\r\n\t\"password\": \"{{Password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/user/signup",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"user",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ok status\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const Data=pm.response.json();\r",
									"pm.environment.set(\"token\", Data.accessToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"sonalb@gmail.com\",\r\n\t\"password\": \"milan@123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/user/login",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status should be pass\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const Jdata = pm.response.json();\r",
									"const num = Jdata.count;\r",
									"console.log(num)\r",
									"\r",
									"for(var i=0;i<num;i++)\r",
									"{\r",
									"    if(Jdata.users[i].email==\"asthajjjj100@gmail.com\")\r",
									"    {\r",
									"        var id = Jdata.users[i]._id;\r",
									"        console.log(id)\r",
									"        var deleted_email = Jdata.users[i].email;\r",
									"        console.log(deleted_email)\r",
									"        pm.environment.set(\"userid\", id);\r",
									"    }\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/user",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/user/{{userid}}",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"user",
								"{{userid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PRODUCT",
			"item": [
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const product_data = pm.response.json();\r",
									"const n = product_data.count;\r",
									"console.log(n)\r",
									"\r",
									"for(var i=0;i<n;i++)\r",
									"{\r",
									"    if (product_data.products[i].name == \"bulb\")\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"    {\r",
									"        var id1 = product_data.products[i]._id;\r",
									"        //console.log(id1)\r",
									"        var deleted_name = product_data.products[i].name;\r",
									"        console.log(deleted_name)\r",
									"        pm.environment.set(\"pid\", id1);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/products",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"{{Name}}\",\r\n\t\"price\": \"{{Amount}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/products",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/products/6318e627899e2e0017872208",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"products",
								"6318e627899e2e0017872208"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"glasses\",\r\n\t\"price\": 5000\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/products/631902fb18022c0017b223c1",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"products",
								"631902fb18022c0017b223c1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/products/{{pid}}",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"products",
								"{{pid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ORDERS",
			"item": [
				{
					"name": "Get All Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jasonData = pm.response.json();\r",
									"const num = jasonData.count;\r",
									"let O_id,name;\r",
									"console.log(num)\r",
									"for(let i=0;i<num;i++)\r",
									"{\r",
									"    if(jasonData.orders[i].product!=null)\r",
									"    {\r",
									"        name=jasonData.orders[i].product.name;\r",
									"        if(name==\"juice\")\r",
									"        {\r",
									"            O_id=jasonData.orders[i]._id;\r",
									"            console.log(O_id);\r",
									"            pm.environment.set(\"orderid\", O_id);\r",
									"        }\r",
									"    }\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/orders",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"product\": \"62173ad27a9fc400174c28af\", \r\n\t\"quantity\": 5120\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/orders/631a368f2ec7fa001723aa9e",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders",
								"631a368f2ec7fa001723aa9e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Order By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"product\": \"621730997a9fc400174c28a9\", \r\n\t\"quantity\": 1234\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Baseurl}}/orders/631a368f2ec7fa001723aa9e",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders",
								"631a368f2ec7fa001723aa9e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Baseurl}}/orders/{{orderid}}",
							"host": [
								"{{Baseurl}}"
							],
							"path": [
								"orders",
								"{{orderid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}